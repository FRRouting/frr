/**Graphdatastructure.**--*Copyright(C)2016CumulusNetworks,Inc.**Thisfileisparto
fGNUZebra.**GNUZebraisfreesoftware;youcanredistributeitand/ormodifyit*underthete
rmsoftheGNUGeneralPublicLicenseaspublishedbythe*FreeSoftwareFoundation;eitherver
sion2,or(atyouroption)any*laterversion.**GNUZebraisdistributedinthehopethatitwil
lbeuseful,but*WITHOUTANYWARRANTY;withouteventheimpliedwarrantyof*MERCHANTABILITY
orFITNESSFORAPARTICULARPURPOSE.SeetheGNU*GeneralPublicLicenseformoredetails.**Yo
ushouldhavereceivedacopyoftheGNUGeneralPublicLicensealong*withthisprogram;seethe
fileCOPYING;ifnot,writetotheFreeSoftware*Foundation,Inc.,51FranklinSt,FifthFloor
,Boston,MA02110-1301USA*/#ifndef_ZEBRA_COMMAND_GRAPH_H#define_ZEBRA_COMMAND_GRAP
H_H#include"vector.h"structgraph{vectornodes;};structgraph_node{vectorfrom;//nod
eswhichhaveedgestothisnodevectorto;//nodeswhichthisnodehasedgestovoid*data;//nod
edatavoid(*del)(void*data);//deletioncallback};structgraph*graph_new(void);/***C
reatesanewnode.**@structgraphthegraphthisnodeexistsin*@param[in]datathisnode'sda
ta*@param[in]deldatadeletioncallback*@returnthenewnode*/structgraph_node*graph_n
ew_node(structgraph*graph,void*data,void(*del)(void*));/***Deletesanode.**Before
deletion,thisfunctionremovesalledgestoandfromthisnodefrom*anyneighbornodes.**If*
dataand*delarenon-null,thefollowingcallismade:*(*node->del)(node->data);**@param
[in]graphthegraphthisnodebelongsto*@param[out]nodepointertonodetodelete*/voidgra
ph_delete_node(structgraph*graph,structgraph_node*node);/***Makesadirectededgebe
tweentwonodes.**@param[in]from*@param[in]to*@returnto*/structgraph_node*graph_ad
d_edge(structgraph_node*from,structgraph_node*to);/***Removesadirectededgebetwee
ntwonodes.**@param[in]from*@param[in]to*/voidgraph_remove_edge(structgraph_node*
from,structgraph_node*to);/***Deletesagraph.*Callsgraph_delete_nodeoneachnodebef
orefreeingthegraphstructitself.**@paramgraphthegraphtodelete*/voidgraph_delete_g
raph(structgraph*graph);#endif/*_ZEBRA_COMMAND_GRAPH_H*/