/**QuaggaWorkQueues.**Copyright(C)2005SunMicrosystems,Inc.**ThisfileispartofQuag
ga.**Quaggaisfreesoftware;youcanredistributeitand/ormodifyit*underthetermsoftheG
NUGeneralPublicLicenseaspublishedbythe*FreeSoftwareFoundation;eitherversion2,or(
atyouroption)any*laterversion.**Quaggaisdistributedinthehopethatitwillbeuseful,b
ut*WITHOUTANYWARRANTY;withouteventheimpliedwarrantyof*MERCHANTABILITYorFITNESSFO
RAPARTICULARPURPOSE.SeetheGNU*GeneralPublicLicenseformoredetails.**Youshouldhave
receivedacopyoftheGNUGeneralPublicLicensealong*withthisprogram;seethefileCOPYING
;ifnot,writetotheFreeSoftware*Foundation,Inc.,51FranklinSt,FifthFloor,Boston,MA0
2110-1301USA*/#ifndef_QUAGGA_WORK_QUEUE_H#define_QUAGGA_WORK_QUEUE_H#include"mem
ory.h"#include"queue.h"DECLARE_MTYPE(WORK_QUEUE)/*Holdtimefortheinitialscheduleo
faqueuerun,inmillisec*/#defineWORK_QUEUE_DEFAULT_HOLD50/*actionvalue,forusebyite
mprocessoranditemerrorhandlers*/typedefenum{WQ_SUCCESS=0,WQ_ERROR,/*Error,runerr
orhandlerifprovided*/WQ_RETRY_NOW,/*retryimmediately*/WQ_RETRY_LATER,/*retrylate
r,ceaseprocessingworkqueue*/WQ_REQUEUE,/*requeueitem,continueprocessingworkqueue
*/WQ_QUEUE_BLOCKED,/*Queuecantbeprocessedatthistime.*SimilartoWQ_RETRY_LATER,but
doesn'tpenalise*theparticularitem..*/}wq_item_status;/*Asingleworkqueueitem,unsu
rprisingly*/structwork_queue_item{STAILQ_ENTRY(work_queue_item)wq;void*data;/*op
aquedata*/unsignedshortran;/*#oftimesitemhasbeenrun*/};#defineWQ_UNPLUGGED(1<<0)
/*availablefordraining*/structwork_queue{/*Everythingbutthespecificationstructis
private*thefollowingmayberead*/structthread_master*master;/*threadmaster*/struct
thread*thread;/*thread,ifoneisactive*/char*name;/*workqueuename*//*Specification
forthisworkqueue.*Public,mustbesetbeforeusebycaller.Maybemodifiedatwill.*/struct
{/*optionalopaqueuserdata,globaltothequeue.*/void*data;/*workfunctiontoprocessit
emswith:*Firstargumentistheworkqueuequeue.*Secondargumentistheitemdata*/wq_item_
status(*workfunc)(structwork_queue*,void*);/*errorhandlingfunction,optional*/voi
d(*errorfunc)(structwork_queue*,structwork_queue_item*);/*callbacktodeleteusersp
ecificitemdata*/void(*del_item_data)(structwork_queue*,void*);/*completioncallba
ck,calledwhenqueueisemptied,optional*/void(*completion_func)(structwork_queue*);
/*maxnumberofretriestomakeforitemthaterrors*/unsignedintmax_retries;unsignedinth
old;/*holdtimeforfirstrun,inms*/unsignedlongyield;/*yieldtimeinusforassociatedth
read*/}spec;/*remainingfieldsshouldbeopaquetousers*/STAILQ_HEAD(work_queue_items
,work_queue_item)items;/*queueitemlist*/intitem_count;/*queueditems*/unsignedlon
gruns;/*runscount*/unsignedlongyields;/*yieldscount*/struct{unsignedintbest;unsi
gnedintgranularity;unsignedlongtotal;}cycles;/*cyclecounts*//*privatestate*/uint
16_tflags;/*usersetflag*/};/*UserAPI*/staticinlineintwork_queue_item_count(struc
twork_queue*wq){returnwq->item_count;}staticinlineboolwork_queue_empty(structwor
k_queue*wq){return(wq->item_count==0)?true:false;}staticinlinestructwork_queue_i
tem*work_queue_last_item(structwork_queue*wq){returnSTAILQ_LAST(&wq->items,work_
queue_item,wq);}staticinlinevoidwork_queue_item_enqueue(structwork_queue*wq,stru
ctwork_queue_item*item){STAILQ_INSERT_TAIL(&wq->items,item,wq);wq->item_count++;
}staticinlinevoidwork_queue_item_dequeue(structwork_queue*wq,structwork_queue_it
em*item){assert(wq->item_count>0);wq->item_count--;STAILQ_REMOVE(&wq->items,item
,work_queue_item,wq);}/*createanewworkqueue,ofgivenname.*usermustfillinthespecof
thereturnedworkqueuebeforeadding*anythingtoit*/externstructwork_queue*work_queue
_new(structthread_master*,constchar*);/*destroyworkqueue*//**Theusageofwork_queu
e_freeisbeingtransitionedtopass*inthedoublepointertoremoveuseafterfree's.*/#ifCO
NFDATE>20190205CPP_NOTICE("work_queue_freewithoutdoublepointerisdeprecated,pleas
efixup")#endifexternvoidwork_queue_free_and_null(structwork_queue**);externvoidw
ork_queue_free_original(structwork_queue*);#definework_queue_free(X)\do{\work_qu
eue_free_original((X));\CPP_WARN("Pleaseusework_queue_free_and_null");\}while(0)
/*Addthesupplieddataasanitemontotheworkqueue*/externvoidwork_queue_add(structwor
k_queue*,void*);/*plugthequeue,iepreventitfrombeingdrained/processed*/externvoid
work_queue_plug(structwork_queue*wq);/*unplugthequeue,allowittobedrainedagain*/e
xternvoidwork_queue_unplug(structwork_queue*wq);boolwork_queue_is_scheduled(stru
ctwork_queue*);/*Helpers,exportedforthread.candcommand.c*/externintwork_queue_ru
n(structthread*);externvoidworkqueue_cmd_init(void);#endif/*_QUAGGA_WORK_QUEUE_H
*/