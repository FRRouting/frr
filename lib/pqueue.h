/*Priorityqueuefunctions.*Copyright(C)2003YasuhiroOhara**ThisfileispartofGNUZebr
a.**GNUZebraisfreesoftware;youcanredistributeitand/ormodify*itunderthetermsofthe
GNUGeneralPublicLicenseaspublished*bytheFreeSoftwareFoundation;eitherversion2,or
(atyour*option)anylaterversion.**GNUZebraisdistributedinthehopethatitwillbeusefu
l,but*WITHOUTANYWARRANTY;withouteventheimpliedwarrantyof*MERCHANTABILITYorFITNES
SFORAPARTICULARPURPOSE.SeetheGNU*GeneralPublicLicenseformoredetails.**Youshouldh
avereceivedacopyoftheGNUGeneralPublicLicensealong*withthisprogram;seethefileCOPY
ING;ifnot,writetotheFreeSoftware*Foundation,Inc.,51FranklinSt,FifthFloor,Boston,
MA02110-1301USA*/#ifndef_ZEBRA_PQUEUE_H#define_ZEBRA_PQUEUE_Hstructpqueue{void**
array;intarray_size;intsize;int(*cmp)(void*,void*);void(*update)(void*node,intac
tual_position);};#definePQUEUE_INIT_ARRAYSIZE32externstructpqueue*pqueue_create(
void);externvoidpqueue_delete(structpqueue*queue);externvoidpqueue_enqueue(void*
data,structpqueue*queue);externvoid*pqueue_dequeue(structpqueue*queue);externvoi
dpqueue_remove_at(intindex,structpqueue*queue);externvoidpqueue_remove(void*data
,structpqueue*queue);externvoidtrickle_down(intindex,structpqueue*queue);externv
oidtrickle_up(intindex,structpqueue*queue);#endif/*_ZEBRA_PQUEUE_H*/