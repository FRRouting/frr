/**Copyright(c)2015-16DavidLamparter,forNetDEF,Inc.**Permissiontouse,copy,modify
,anddistributethissoftwareforany*purposewithorwithoutfeeisherebygranted,provided
thattheabove*copyrightnoticeandthispermissionnoticeappearinallcopies.**THESOFTWA
REISPROVIDED"ASIS"ANDTHEAUTHORDISCLAIMSALLWARRANTIES*WITHREGARDTOTHISSOFTWAREINC
LUDINGALLIMPLIEDWARRANTIESOF*MERCHANTABILITYANDFITNESS.INNOEVENTSHALLTHEAUTHORBE
LIABLEFOR*ANYSPECIAL,DIRECT,INDIRECT,ORCONSEQUENTIALDAMAGESORANYDAMAGES*WHATSOEV
ERRESULTINGFROMLOSSOFUSE,DATAORPROFITS,WHETHERINAN*ACTIONOFCONTRACT,NEGLIGENCEOR
OTHERTORTIOUSACTION,ARISINGOUTOF*ORINCONNECTIONWITHTHEUSEORPERFORMANCEOFTHISSOFT
WARE.*/#ifndef_QUAGGA_MEMORY_H#define_QUAGGA_MEMORY_H#include<stdlib.h>#include<
stdio.h>#include<frratomic.h>#include"compiler.h"#definearray_size(ar)(sizeof(ar
)/sizeof(ar[0]))#defineSIZE_VAR~0ULstructmemtype{structmemtype*next,**ref;constc
har*name;_Atomicsize_tn_alloc;_Atomicsize_tsize;};structmemgroup{structmemgroup*
next,**ref;structmemtype*types,**insert;constchar*name;};/*macrousage:**mydaemon
.h*DECLARE_MGROUP(MYDAEMON)*DECLARE_MTYPE(MYDAEMON_COMMON)**mydaemon.c*DEFINE_MG
ROUP(MYDAEMON,"mydaemonmemory")*DEFINE_MTYPE(MYDAEMON,MYDAEMON_COMMON,*"thismtyp
eisusedinmultiplefilesinmydaemon")*foo=qmalloc(MTYPE_MYDAEMON_COMMON,sizeof(*foo
))**mydaemon_io.c*bar=qmalloc(MTYPE_MYDAEMON_COMMON,sizeof(*bar))**DEFINE_MTYPE_
STATIC(MYDAEMON,MYDAEMON_IO,*"thismtypeisusedonlyinthisfile")*baz=qmalloc(MTYPE_
MYDAEMON_IO,sizeof(*baz))**Note:Namingconventions(MGROUP_andMTYPE_prefixesareenf
orced*bynothavingtheseaspartofthemacroarguments)*Note:MTYPE_*aresymbolstothecomp
iler(oftypestructmemtype*),*butMGROUP_*aren't.*/#defineDECLARE_MGROUP(name)exter
nstructmemgroup_mg_##name;#defineDEFINE_MGROUP(mname,desc)\structmemgroup_mg_##m
name\__attribute__((section(".data.mgroups")))={\.name=desc,\.types=NULL,\.next=
NULL,\.insert=NULL,\.ref=NULL,\};\staticvoid_mginit_##mname(void)__attribute__((
_CONSTRUCTOR(1000)));\staticvoid_mginit_##mname(void)\{\externstructmemgroup**mg
_insert;\_mg_##mname.ref=mg_insert;\*mg_insert=&_mg_##mname;\mg_insert=&_mg_##mn
ame.next;\}\staticvoid_mgfini_##mname(void)__attribute__((_DESTRUCTOR(1000)));\s
taticvoid_mgfini_##mname(void)\{\if(_mg_##mname.next)\_mg_##mname.next->ref=_mg_
##mname.ref;\*_mg_##mname.ref=_mg_##mname.next;\}#defineDECLARE_MTYPE(name)\exte
rnstructmemtype_mt_##name;\staticstructmemtype*constMTYPE_##name=&_mt_##name;#de
fineDEFINE_MTYPE_ATTR(group,mname,attr,desc)\attrstructmemtype_mt_##mname\__attr
ibute__((section(".data.mtypes")))={\.name=desc,\.next=NULL,\.n_alloc=0,\.size=0
,\.ref=NULL,\};\staticvoid_mtinit_##mname(void)__attribute__((_CONSTRUCTOR(1001)
));\staticvoid_mtinit_##mname(void)\{\if(_mg_##group.insert==NULL)\_mg_##group.i
nsert=&_mg_##group.types;\_mt_##mname.ref=_mg_##group.insert;\*_mg_##group.inser
t=&_mt_##mname;\_mg_##group.insert=&_mt_##mname.next;\}\staticvoid_mtfini_##mnam
e(void)__attribute__((_DESTRUCTOR(1001)));\staticvoid_mtfini_##mname(void)\{\if(
_mt_##mname.next)\_mt_##mname.next->ref=_mt_##mname.ref;\*_mt_##mname.ref=_mt_##
mname.next;\}#defineDEFINE_MTYPE(group,name,desc)DEFINE_MTYPE_ATTR(group,name,,d
esc)#defineDEFINE_MTYPE_STATIC(group,name,desc)\DEFINE_MTYPE_ATTR(group,name,sta
tic,desc)\staticstructmemtype*constMTYPE_##name=&_mt_##name;DECLARE_MGROUP(LIB)D
ECLARE_MTYPE(TMP)DECLARE_MTYPE(PREFIX_FLOWSPEC)externvoid*qmalloc(structmemtype*
mt,size_tsize)__attribute__((malloc,_ALLOC_SIZE(2),nonnull(1)_RET_NONNULL));exte
rnvoid*qcalloc(structmemtype*mt,size_tsize)__attribute__((malloc,_ALLOC_SIZE(2),
nonnull(1)_RET_NONNULL));externvoid*qrealloc(structmemtype*mt,void*ptr,size_tsiz
e)__attribute__((_ALLOC_SIZE(3),nonnull(1)_RET_NONNULL));externvoid*qstrdup(stru
ctmemtype*mt,constchar*str)__attribute__((malloc,nonnull(1)_RET_NONNULL));extern
voidqfree(structmemtype*mt,void*ptr)__attribute__((nonnull(1)));#defineXMALLOC(m
type,size)qmalloc(mtype,size)#defineXCALLOC(mtype,size)qcalloc(mtype,size)#defin
eXREALLOC(mtype,ptr,size)qrealloc(mtype,ptr,size)#defineXSTRDUP(mtype,str)qstrdu
p(mtype,str)#defineXFREE(mtype,ptr)\do{\qfree(mtype,ptr);\ptr=NULL;\}while(0)sta
ticinlinesize_tmtype_stats_alloc(structmemtype*mt){returnmt->n_alloc;}/*NB:calls
areorderedbymemgroup;andthereisacallwithmt==NULLfor*eachmemgroup(sothataheaderca
nbeprinted,andemptymemgroupsshow)**returnvalue:0:continue,!0:abortwalk.qmem_walk
willreturnthe*lastvaluefromqmem_walk_fn.*/typedefintqmem_walk_fn(void*arg,struct
memgroup*mg,structmemtype*mt);externintqmem_walk(qmem_walk_fn*func,void*arg);ext
ernintlog_memstats(FILE*fp,constchar*);#definelog_memstats_stderr(prefix)log_mem
stats(stderr,prefix)externvoidmemory_oom(size_tsize,constchar*name);#endif/*_QUA
GGA_MEMORY_H*/