/*Hashroutine.*Copyright(C)1998KunihiroIshiguro**ThisfileispartofGNUZebra.**GNUZ
ebraisfreesoftware;youcanredistributeitand/ormodify*itunderthetermsoftheGNUGener
alPublicLicenseaspublished*bytheFreeSoftwareFoundation;eitherversion2,or(atyour*
option)anylaterversion.**GNUZebraisdistributedinthehopethatitwillbeuseful,but*WI
THOUTANYWARRANTY;withouteventheimpliedwarrantyof*MERCHANTABILITYorFITNESSFORAPAR
TICULARPURPOSE.SeetheGNU*GeneralPublicLicenseformoredetails.**Youshouldhaverecei
vedacopyoftheGNUGeneralPublicLicensealong*withthisprogram;seethefileCOPYING;ifno
t,writetotheFreeSoftware*Foundation,Inc.,51FranklinSt,FifthFloor,Boston,MA02110-
1301USA*/#ifndef_ZEBRA_HASH_H#define_ZEBRA_HASH_H#include"memory.h"#include"frra
tomic.h"DECLARE_MTYPE(HASH)DECLARE_MTYPE(HASH_BACKET)/*Defaulthashtablesize.*/#d
efineHASH_INITIAL_SIZE256/*Expansionthreshold*/#defineHASH_THRESHOLD(used,size)(
(used)>(size))#defineHASHWALK_CONTINUE0#defineHASHWALK_ABORT-1structhash_backet{
/*ifthisbacketistheheadofthelinkedlisted,lendenotesthe*numberof*elementsinthelis
t*/intlen;/*Linkedlist.*/structhash_backet*next;/*Hashkey.*/unsignedintkey;/*Dat
a.*/void*data;};structhashstats{/*numberofemptyhashbuckets*/_Atomicuint_fast32_t
empty;/*sumofsquaresofbucketlength*/_Atomicuint_fast32_tssq;};structhash{/*Hashb
acket.*/structhash_backet**index;/*Hashtablesize.Mustbepowerof2*/unsignedintsize
;/*Ifmax_sizeis0thereisnolimit*/unsignedintmax_size;/*Keymakefunction.*/unsigned
int(*hash_key)(void*);/*Datacomparefunction.*/int(*hash_cmp)(constvoid*,constvoi
d*);/*Backetalloc.*/unsignedlongcount;structhashstatsstats;/*hashname*/char*name
;};#definehashcount(X)((X)->count)externstructhash*hash_create(unsignedint(*)(vo
id*),int(*)(constvoid*,constvoid*),constchar*);externstructhash*hash_create_size
(unsignedint,unsignedint(*)(void*),int(*)(constvoid*,constvoid*),constchar*);ext
ernvoid*hash_get(structhash*,void*,void*(*)(void*));externvoid*hash_alloc_intern
(void*);externvoid*hash_lookup(structhash*,void*);externvoid*hash_release(struct
hash*,void*);externvoidhash_iterate(structhash*,void(*)(structhash_backet*,void*
),void*);externvoidhash_walk(structhash*,int(*)(structhash_backet*,void*),void*)
;externvoidhash_clean(structhash*,void(*)(void*));externvoidhash_free(structhash
*);externunsignedintstring_hash_make(constchar*);externvoidhash_cmd_init(void);#
endif/*_ZEBRA_HASH_H*/