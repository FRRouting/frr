/**TimerWheel*Copyright(C)2016CumulusNetworks,Inc.*DonaldSharp**Thisprogramisfre
esoftware;youcanredistributeitand/ormodify*itunderthetermsoftheGNUGeneralPublicL
icenseaspublishedby*theFreeSoftwareFoundation;eitherversion2oftheLicense,or*(aty
ouroption)anylaterversion.**Thisprogramisdistributedinthehopethatitwillbeuseful,
but*WITHOUTANYWARRANTY;withouteventheimpliedwarrantyof*MERCHANTABILITYorFITNESSF
ORAPARTICULARPURPOSE.SeetheGNU*GeneralPublicLicenseformoredetails.**Youshouldhav
ereceivedacopyoftheGNUGeneralPublicLicensealong*withthisprogram;seethefileCOPYIN
G;ifnot,writetotheFreeSoftware*Foundation,Inc.,51FranklinSt,FifthFloor,Boston,MA
02110-1301USA*/#ifndef__WHEEL_H__#define__WHEEL_H__structtimer_wheel{structthrea
d_master*master;intslots;longlongcurr_slot;unsignedintperiod;unsignedintnexttime
;unsignedintslots_to_skip;structlist**wheel_slot_lists;structthread*timer;/**Key
todeterminewhatslottheitembelongsin*/unsignedint(*slot_key)(void*);void(*slot_ru
n)(void*);};/**Createsatimerwheel**master-Threadmasterstructurefortheprocess*per
iod-TheTimeinsecondsthatthetimerwheelwill*takebeforeitstartsissuingcommandsagain
*foritemsineachslot*slots-Thenumberofslotstohaveinthisparticular*timerwheel*slot
_key-Ahashingfunctionofsomesortthatwillallow*thetimerwheeltoputitemsintoindividu
alslots*slot_run-Thefunctiontorunovereachiteminaparticularslot**Createsatimerwhe
elthatwillwakeup'slots'timesovertheentire*wheel.Eachtimethetimerwheelwakesupitwi
lliteratethrough*andruntheslot_runfunctionforeachitemstoredinthatparticular*slot
.**Thetimercodeis'intelligent'inthatitnoticesifanythingis*inaparticularslotandca
nschedulethenexttimertoskip*theemptyslot.**Thegeneralpurposeofatimerwheelistored
uceeventsinasystem.*Aperfectexampleofusageforthisissayhellopacketsthatneed*tobes
entouttoallyourneighbors.Supposealargeroutingprotocol*hastosendkeepalivepacketse
veryYsecondstoeachofit'speers.*Atscalewecanhaveaverylargenumberofpeers,X.*Thisme
ansthatwewillhaveXtimingeventseveryYseconds.*Ifyoureplacetheseeventswithatimerwh
eelthathasZslots*youwillhaveatmostY/Ztimereventsifeachslothasaworkitem*init.**Wh
enXislargethenumberofeventsinasystemcanquicklyescalate*andcausesignificantamount
oftimehandlingthreadeventsinstead*ofrunningyourcode.*/structtimer_wheel*wheel_in
it(structthread_master*master,intperiod,size_tslots,unsignedint(*slot_key)(void*
),void(*slot_run)(void*));/**Deletethespecifiedtimerwheelcreated*/voidwheel_dele
te(structtimer_wheel*);/**PausetheWheelfromrunning*/intwheel_stop(structtimer_wh
eel*wheel);/**Startthewheelrunningagain*/intwheel_start(structtimer_wheel*wheel)
;/**wheel-TheTimerwheelbeingmodified*item-Thegenericdatastructurethatwillbehande
d*totheslot_runfunction.**Additemtoaslotsetupbytheslot_key,*possiblychangenextti
mepop.*/intwheel_add_item(structtimer_wheel*wheel,void*item);/**wheel-TheTimerwh
eelbeingmodified.*item-Theitemtoremovefromoneoftheslotsin*thetimerwheel.**Remove
aitemtoaslotsetupbytheslot_key,*possiblychangenexttimepop.*/intwheel_remove_item
(structtimer_wheel*wheel,void*item);#endif