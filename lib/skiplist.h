/**Copyright1990WilliamPugh**Redistributionanduseinsourceandbinaryforms,withorwi
thout*modification,arepermitted.**THISSOFTWAREISPROVIDEDBYTHEAUTHORANDCONTRIBUTO
RS``ASIS''*ANDANYEXPRESSORIMPLIEDWARRANTIES,INCLUDING,BUTNOTLIMITED*TO,THEIMPLIE
DWARRANTIESOFMERCHANTABILITYANDFITNESSFORA*PARTICULARPURPOSEAREDISCLAIMED.INNOEV
ENTSHALLTHEAUTHOROR*CONTRIBUTORSBELIABLEFORANYDIRECT,INDIRECT,INCIDENTAL,*SPECIA
L,EXEMPLARY,ORCONSEQUENTIALDAMAGES(INCLUDING,BUTNOT*LIMITEDTO,PROCUREMENTOFSUBST
ITUTEGOODSORSERVICES;LOSSOF*USE,DATA,ORPROFITS;ORBUSINESSINTERRUPTION)HOWEVERCAU
SEDAND*ONANYTHEORYOFLIABILITY,WHETHERINCONTRACT,STRICTLIABILITY,*ORTORT(INCLUDIN
GNEGLIGENCEOROTHERWISE)ARISINGINANYWAYOUT*OFTHEUSEOFTHISSOFTWARE,EVENIFADVISEDOF
THEPOSSIBILITYOF*SUCHDAMAGE.**PermissiontoincludeinquaggaprovideonMarch31,2016*/
/**SkipListimpementationbasedoncodefromWilliamPugh.*ftp://ftp.cs.umd.edu/pub/ski
pLists/*//*skiplist.h*/#ifndef_ZEBRA_SKIPLIST_H#define_ZEBRA_SKIPLIST_H#defineSK
IPLIST_0TIMER_DEBUG1/**skiplistnodesmustalwayscontaindatatobevalid.Addingan*empt
ynodetoalistisinvalid*/structskiplistnode{void*key;void*value;#ifSKIPLIST_0TIMER
_DEBUGintflags;#defineSKIPLIST_NODE_FLAG_INSERTED0x00000001#endifstructskiplistn
ode*forward[1];/*variablesized*/};structskiplist{intflags;#defineSKIPLIST_FLAG_A
LLOW_DUPLICATES0x00000001intlevel;/*maxlvl(1+current#oflevelsinlist)*/unsignedin
tcount;structskiplistnode*header;structskiplistnode*stats;structskiplistnode*las
t;/*lastreallistitem(NULLifemptylist)*//**Returns-1ifval1<val2,0ifequal?,1ifval1
>val2.*Usedasdefinitionofsortedforlistnode_add_sort*/int(*cmp)(void*val1,void*va
l2);/*callbacktofreeuser-owneddatawhenlistnodeisdeleted.supplying*thiscallbackis
verymuchencouraged!*/void(*del)(void*val);};/*Prototypes.*/externstructskiplist*
skiplist_new(/*encouraged:setlist.delcallbackonnewlists*/intflags,int(*cmp)(void
*key1,void*key2),/*NULL=>defaultcmp*/void(*del)(void*val));/*NULL=>noautovalfree
*/externvoidskiplist_free(structskiplist*);externintskiplist_insert(registerstru
ctskiplist*l,registervoid*key,registervoid*value);externintskiplist_delete(regis
terstructskiplist*l,registervoid*key,registervoid*value);externintskiplist_searc
h(registerstructskiplist*l,registervoid*key,void**valuePointer);externintskiplis
t_first_value(registerstructskiplist*l,/*in*/registervoid*key,/*in*/void**valueP
ointer,/*in/out*/void**cursor);/*out*/externintskiplist_next_value(registerstruc
tskiplist*l,/*in*/registervoid*key,/*in*/void**valuePointer,/*in/out*/void**curs
or);/*in/out*/externintskiplist_first(registerstructskiplist*l,void**keyPointer,
void**valuePointer);externintskiplist_last(registerstructskiplist*l,void**keyPoi
nter,void**valuePointer);externintskiplist_delete_first(registerstructskiplist*l
);externintskiplist_next(registerstructskiplist*l,/*in*/void**keyPointer,/*out*/
void**valuePointer,/*out*/void**cursor);/*in/out*/externintskiplist_empty(regist
erstructskiplist*l);/*in*/externunsignedintskiplist_count(registerstructskiplist
*l);/*in*/externvoidskiplist_debug(structvty*vty,structskiplist*l);externvoidski
plist_test(structvty*vty);#endif/*_ZEBRA_SKIPLIST_H*/