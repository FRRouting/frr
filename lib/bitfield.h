/*Bitfields*Copyright(C)2016CumulusNetworks,Inc.**ThisfileispartofQuagga.**Quagg
aisfreesoftware;youcanredistributeitand/ormodifyit*underthetermsoftheGNUGeneralP
ublicLicenseaspublishedbythe*FreeSoftwareFoundation;eitherversion2,or(atyouropti
on)any*laterversion.**Quaggaisdistributedinthehopethatitwillbeuseful,but*WITHOUT
ANYWARRANTY;withouteventheimpliedwarrantyof*MERCHANTABILITYorFITNESSFORAPARTICUL
ARPURPOSE.SeetheGNU*GeneralPublicLicenseformoredetails.**Youshouldhavereceivedac
opyoftheGNUGeneralPublicLicensealong*withthisprogram;seethefileCOPYING;ifnot,wri
tetotheFreeSoftware*Foundation,Inc.,51FranklinSt,FifthFloor,Boston,MA02110-1301U
SA*//***AsimplebitarrayimplementationtoallocateandfreeIDs.Anexample*ofitsusageis
inallocatinglinkstateIDsforOSPFv3asOSPFv3has*removedalladdresssemanticsfromLSID.
Anotherusagecanbein*allocatingIDsforBGPneighbors(anddynamicupdategroups)for*effi
cientstorageofadj-rib-out.**Anexample:*#include"bitfield.h"**bitfield_tbitfield;
**bf_init(bitfield,32);*...*bf_assign_index(bitfield,id1);*bf_assign_index(bitfi
eld,id2);*...*bf_release_index(bitfield,id1);*/#ifndef_BITFIELD_H#define_BITFIEL
D_H#include<stdio.h>#include<string.h>#include<stdlib.h>typedefunsignedintword_t
;#defineWORD_MAX0xFFFFFFFF#defineWORD_SIZE(sizeof(word_t)*8)/***Thebitfieldstruc
ture.*@data:thebitstomanage.*@n:Thecurrentwordnumberthatisbeingused.*@m:totalnum
berofwordsin'data'*/#definebitfield_tstruct{word_t*data;size_tn,m;}/***Initializ
ethebits.*@v:aninstanceofbitfield_tstruct.*@N:numberofbitstostartwith,whichequat
estohowmany*IDscanbeallocated.*/#definebf_init(v,N)\do{\(v).n=0;\(v).m=((N)/WORD
_SIZE+1);\(v).data=calloc(1,((v).m*sizeof(word_t)));\}while(0)/***allocateandass
ignanidfrombitfieldv.*/#definebf_assign_index(v,id)\do{\bf_find_bit(v,id);\bf_se
t_bit(v,id);\}while(0)/**allocateandassign0thbitinthebitfiled.*/#definebf_assign
_zero_index(v)\do{\intid=0;\bf_assign_index(v,id);\}while(0)/**returnanidtobitfi
eldv*/#definebf_release_index(v,id)\(v).data[bf_index(id)]&=~(1<<(bf_offset(id))
)/**return0thindexbacktobitfield*/#definebf_release_zero_index(v)bf_release_inde
x(v,0)#definebf_index(b)((b)/WORD_SIZE)#definebf_offset(b)((b)%WORD_SIZE)/***Set
abitinthearray.Ifitfillsupthatwordandweare*outofwords,extenditbyonemoreword.*/#d
efinebf_set_bit(v,b)\do{\size_tw=bf_index(b);\(v).data[w]|=1<<(bf_offset(b));\(v
).n+=((v).data[w]==WORD_MAX);\if((v).n==(v).m){\(v).m=(v).m+1;\(v).data=realloc(
(v).data,(v).m*sizeof(word_t));\}\}while(0)/*Findaclearbitinvandassignittob.*/#d
efinebf_find_bit(v,b)\do{\word_tword=0;\unsignedintw,sh;\for(w=0;w<=(v).n;w++){\
if((word=(v).data[w])!=WORD_MAX)\break;\}\(b)=((word&0xFFFF)==0xFFFF)<<4;\word>>
=(b);\sh=((word&0xFF)==0xFF)<<3;\word>>=sh;\(b)|=sh;\sh=((word&0xF)==0xF)<<2;\wo
rd>>=sh;\(b)|=sh;\sh=((word&0x3)==0x3)<<1;\word>>=sh;\(b)|=sh;\sh=((word&0x1)==0
x1)<<0;\word>>=sh;\(b)|=sh;\(b)+=(w*WORD_SIZE);\}while(0)/**Freetheallocatedmemo
ryfordata*@v:aninstanceofbitfield_tstruct.*/#definebf_free(v)\do{\if((v).data){\
free((v).data);\}\}while(0)#endif