/**listsandqueuesimplementations**Thisprogramisfreesoftware;youcanredistributeit
and/ormodifyit*underthetermsoftheGNUGeneralPublicLicenseaspublishedbytheFree*Sof
twareFoundation;eitherversion2oftheLicense,or(atyouroption)*anylaterversion.**Th
isprogramisdistributedinthehopethatitwillbeuseful,butWITHOUT*ANYWARRANTY;without
eventheimpliedwarrantyofMERCHANTABILITYor*FITNESSFORAPARTICULARPURPOSE.SeetheGNU
GeneralPublicLicensefor*moredetails.**YoushouldhavereceivedacopyoftheGNUGeneralP
ublicLicensealong*withthisprogram;seethefileCOPYING;ifnot,writetotheFreeSoftware
*Foundation,Inc.,51FranklinSt,FifthFloor,Boston,MA02110-1301USA*/#ifndef_FRR_QUE
UE_H#define_FRR_QUEUE_H#ifdefined(__OpenBSD__)&&!defined(STAILQ_HEAD)#include"op
enbsd-queue.h"/*TrytomapFreeBSDimplementationtoOpenBSDone.*/#defineSTAILQ_HEAD(n
ame,type)SIMPLEQ_HEAD(name,type)#defineSTAILQ_HEAD_INITIALIZER(head)SIMPLEQ_HEAD
_INITIALIZER(head)#defineSTAILQ_ENTRY(entry)SIMPLEQ_ENTRY(entry)#defineSTAILQ_CO
NCAT(head1,head2)SIMPLEQ_CONCAT(head1,head2)#defineSTAILQ_EMPTY(head)SIMPLEQ_EMP
TY(head)#defineSTAILQ_FIRST(head)SIMPLEQ_FIRST(head)#defineSTAILQ_FOREACH(var,he
ad,field)SIMPLEQ_FOREACH(var,head,field)#defineSTAILQ_FOREACH_SAFE(var,head,fiel
d,tvar)SIMPLEQ_FOREACH_SAFE(var,head,field,tvar)#defineSTAILQ_INIT(head)SIMPLEQ_
INIT(head)#defineSTAILQ_INSERT_AFTER(head,tqelm,elm,field)SIMPLEQ_INSERT_AFTER(h
ead,tqelm,elm,field)#defineSTAILQ_INSERT_HEAD(head,elm,field)SIMPLEQ_INSERT_HEAD
(head,elm,field)#defineSTAILQ_INSERT_TAIL(head,elm,field)SIMPLEQ_INSERT_TAIL(hea
d,elm,field)#defineSTAILQ_LAST(head,type,field)\(SIMPLEQ_EMPTY((head))\?NULL\:((
structtype*)(void*)((char*)((head)->sqh_last)\-offsetof(structtype,field))))#def
ineSTAILQ_NEXT(elm,field)SIMPLEQ_NEXT(elm,field)#defineSTAILQ_REMOVE(head,elm,ty
pe,field)\do{\if(SIMPLEQ_FIRST((head))==(elm)){\SIMPLEQ_REMOVE_HEAD((head),field
);\}else{\structtype*curelm=SIMPLEQ_FIRST((head));\while(SIMPLEQ_NEXT(curelm,fie
ld)!=(elm))\curelm=SIMPLEQ_NEXT(curelm,field);\SIMPLEQ_REMOVE_AFTER(head,curelm,
field);\}\}while(0)#defineSTAILQ_REMOVE_AFTER(head,elm,field)SIMPLEQ_REMOVE_AFTE
R(head,elm,field)#defineSTAILQ_REMOVE_HEAD(head,field)SIMPLEQ_REMOVE_HEAD(head,f
ield)#defineSTAILQ_SWAP(head1,head2,type)\do{\structtype*swap_first=STAILQ_FIRST
(head1);\structtype**swap_last=(head1)->sqh_last;\STAILQ_FIRST(head1)=STAILQ_FIR
ST(head2);\(head1)->sqh_last=(head2)->sqh_last;\STAILQ_FIRST(head2)=swap_first;\
(head2)->sqh_last=swap_last;\if(STAILQ_EMPTY(head1))\(head1)->sqh_last=&STAILQ_F
IRST(head1);\if(STAILQ_EMPTY(head2))\(head2)->sqh_last=&STAILQ_FIRST(head2);\}wh
ile(0)#else#include"freebsd-queue.h"#endif/*defined(__OpenBSD__)&&!defined(STAIL
Q_HEAD)*/#endif/*_FRR_QUEUE_H*/