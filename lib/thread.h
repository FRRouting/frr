/*Threadmanagementroutineheader.*Copyright(C)1998KunihiroIshiguro**Thisfileispar
tofGNUZebra.**GNUZebraisfreesoftware;youcanredistributeitand/ormodifyit*underthe
termsoftheGNUGeneralPublicLicenseaspublishedbythe*FreeSoftwareFoundation;eitherv
ersion2,or(atyouroption)any*laterversion.**GNUZebraisdistributedinthehopethatitw
illbeuseful,but*WITHOUTANYWARRANTY;withouteventheimpliedwarrantyof*MERCHANTABILI
TYorFITNESSFORAPARTICULARPURPOSE.SeetheGNU*GeneralPublicLicenseformoredetails.**
YoushouldhavereceivedacopyoftheGNUGeneralPublicLicensealong*withthisprogram;seet
hefileCOPYING;ifnot,writetotheFreeSoftware*Foundation,Inc.,51FranklinSt,FifthFlo
or,Boston,MA02110-1301USA*/#ifndef_ZEBRA_THREAD_H#define_ZEBRA_THREAD_H#include<
zebra.h>#include<pthread.h>#include<poll.h>#include"monotime.h"structrusage_t{st
ructrusagecpu;structtimevalreal;};#defineRUSAGE_Tstructrusage_t#defineGETRUSAGE(
X)thread_getrusage(X)/*Linkedlistofthread.*/structthread_list{structthread*head;
structthread*tail;intcount;};structpqueue;structfd_handler{/*numberofpfdthatfiti
ntheallocatedspaceofpfds.Thisisa*constant*andisthesameforbothpfdsandcopy.*/nfds_
tpfdsize;/*filedescriptorstomonitorfori/o*/structpollfd*pfds;/*numberofpollfdsst
oredinpfds*/nfds_tpfdcount;/*chunkusedfortempcopyofpollfds*/structpollfd*copy;/*
numberofpollfdsstoredincopy*/nfds_tcopycount;};structcancel_req{structthread*thr
ead;void*eventobj;structthread**threadref;};/*Masterofthetheads.*/structthread_m
aster{char*name;structthread**read;structthread**write;structpqueue*timer;struct
thread_listevent;structthread_listready;structthread_listunuse;structlist*cancel
_req;boolcanceled;pthread_cond_tcancel_cond;structhash*cpu_record;intio_pipe[2];
intfd_limit;structfd_handlerhandler;unsignedlongalloc;longselectpoll_timeout;boo
lspin;boolhandle_signals;pthread_mutex_tmtx;pthread_towner;};typedefunsignedchar
thread_type;/*Threaditself.*/structthread{thread_typetype;/*threadtype*/thread_t
ypeadd_type;/*threadtype*/structthread*next;/*nextpointerofthethread*/structthre
ad*prev;/*previouspointerofthethread*/structthread**ref;/*externalreference(ifgi
ven)*/structthread_master*master;/*pointertothestructthread_master*/int(*func)(s
tructthread*);/*eventfunction*/void*arg;/*eventargument*/union{intval;/*secondar
gumentoftheevent.*/intfd;/*filedescriptorincaseofr/w*/structtimevalsands;/*resto
ftimesandsvalue.*/}u;intindex;/*queuepositionfortimers*/structtimevalreal;struct
cpu_thread_history*hist;/*cachepointertocpu_history*/unsignedlongyield;/*yieldti
meinmicroseconds*/constchar*funcname;/*nameofthreadfunction*/constchar*schedfrom
;/*sourcefilethreadwasscheduledfrom*/intschedfrom_line;/*linenumberofsourcefile*
/pthread_mutex_tmtx;/*mutexforthread.cfunctions*/};structcpu_thread_history{int(
*func)(structthread*);unsignedinttotal_calls;unsignedinttotal_active;structtime_
stats{unsignedlongtotal,max;}real;structtime_statscpu;thread_typetypes;constchar
*funcname;};/*Structtimeval'stv_useconesecondvalue.*/#defineTIMER_SECOND_MICRO10
00000L/*Threadtypes.*/#defineTHREAD_READ0#defineTHREAD_WRITE1#defineTHREAD_TIMER
2#defineTHREAD_EVENT3#defineTHREAD_READY4#defineTHREAD_UNUSED5#defineTHREAD_EXEC
UTE6/*Threadyieldtime.*/#defineTHREAD_YIELD_TIME_SLOT10*1000L/*10ms*//*Macros.*/
#defineTHREAD_ARG(X)((X)->arg)#defineTHREAD_FD(X)((X)->u.fd)#defineTHREAD_VAL(X)
((X)->u.val)#defineTHREAD_OFF(thread)\do{\if(thread){\thread_cancel(thread);\thr
ead=NULL;\}\}while(0)#defineTHREAD_READ_OFF(thread)THREAD_OFF(thread)#defineTHRE
AD_WRITE_OFF(thread)THREAD_OFF(thread)#defineTHREAD_TIMER_OFF(thread)THREAD_OFF(
thread)#definedebugargdefconstchar*funcname,constchar*schedfrom,intfromln#define
thread_add_read(m,f,a,v,t)funcname_thread_add_read_write(THREAD_READ,m,f,a,v,t,#
f,__FILE__,__LINE__)#definethread_add_write(m,f,a,v,t)funcname_thread_add_read_w
rite(THREAD_WRITE,m,f,a,v,t,#f,__FILE__,__LINE__)#definethread_add_timer(m,f,a,v
,t)funcname_thread_add_timer(m,f,a,v,t,#f,__FILE__,__LINE__)#definethread_add_ti
mer_msec(m,f,a,v,t)funcname_thread_add_timer_msec(m,f,a,v,t,#f,__FILE__,__LINE__
)#definethread_add_timer_tv(m,f,a,v,t)funcname_thread_add_timer_tv(m,f,a,v,t,#f,
__FILE__,__LINE__)#definethread_add_event(m,f,a,v,t)funcname_thread_add_event(m,
f,a,v,t,#f,__FILE__,__LINE__)#definethread_execute(m,f,a,v)funcname_thread_execu
te(m,f,a,v,#f,__FILE__,__LINE__)/*Prototypes.*/externstructthread_master*thread_
master_create(constchar*);voidthread_master_set_name(structthread_master*master,
constchar*name);externvoidthread_master_free(structthread_master*);externvoidthr
ead_master_free_unused(structthread_master*);externstructthread*funcname_thread_
add_read_write(intdir,structthread_master*,int(*)(structthread*),void*,int,struc
tthread**,debugargdef);externstructthread*funcname_thread_add_timer(structthread
_master*,int(*)(structthread*),void*,long,structthread**,debugargdef);externstru
ctthread*funcname_thread_add_timer_msec(structthread_master*,int(*)(structthread
*),void*,long,structthread**,debugargdef);externstructthread*funcname_thread_add
_timer_tv(structthread_master*,int(*)(structthread*),void*,structtimeval*,struct
thread**,debugargdef);externstructthread*funcname_thread_add_event(structthread_
master*,int(*)(structthread*),void*,int,structthread**,debugargdef);externvoidfu
ncname_thread_execute(structthread_master*,int(*)(structthread*),void*,int,debug
argdef);#undefdebugargdefexternvoidthread_cancel(structthread*);externvoidthread
_cancel_async(structthread_master*,structthread**,void*);externvoidthread_cancel
_event(structthread_master*,void*);externstructthread*thread_fetch(structthread_
master*,structthread*);externvoidthread_call(structthread*);externunsignedlongth
read_timer_remain_second(structthread*);externstructtimevalthread_timer_remain(s
tructthread*);externintthread_should_yield(structthread*);/*setyieldtimeforthrea
d*/externvoidthread_set_yield_time(structthread*,unsignedlong);/*Internallibfrre
xports*/externvoidthread_getrusage(RUSAGE_T*);externvoidthread_cmd_init(void);/*
Returnselapsedreal(wallclock)time.*/externunsignedlongthread_consumed_time(RUSAG
E_T*after,RUSAGE_T*before,unsignedlong*cpu_time_elapsed);/*onlyforuseinloggingfu
nctions!*/externpthread_key_tthread_current;#endif/*_ZEBRA_THREAD_H*/