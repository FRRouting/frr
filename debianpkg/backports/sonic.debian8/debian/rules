#!/usr/bin/make -f

# FRRouting Configuration options
######################################
#
#    WANT_xxxx   --> Set to 1 for enable, 0 for disable
# The following are the defaults. They can be overridden by setting a 
# env variable to a different value
#
export WANT_LDP=1
export WANT_PIM=0
export WANT_OSPFAPI=0
export WANT_TCP_ZEBRA=1
export WANT_BGP_VNC=1
export WANT_CUMULUS_MODE=0
export WANT_MULTIPATH=1
export WANT_RPKI=0
#
# NOTE: If you use WANT_RPKI, then there is a new dependency for librtr0 package
#    and a build dependency of the librtr-dev package.
#    While the librtr0 is added to the depenencies automatically, the build dependency
#    can't be changed dynamically and building will fail if the librtr-dev isn't
#    installed during package build
#    Tested versions of both packages can be found at
#    https://ci1.netdef.org/browse/RPKI-RTRLIB/latestSuccessful/artifact
#
# If multipath is enabled (WANT_MULTIPATH=1), then set number of multipaths here
# Please be aware that 0 is NOT disabled, but treated as unlimited
#   export MULTIPATH=256
#
# Set the following to the value required (or leave undefined for the default below)
# WANT_FRR_USER is used for the username and groupname of the FRR user account
#   export WANT_FRR_USER=frr
#   export WANT_FRR_VTY_GROUP=frrvty
#
####################################

export DH_VERBOSE=1
export DEB_BUILD_MAINT_OPTIONS = hardening=+all
export DH_OPTIONS=-v

ifeq ($(WANT_SNMP), 1)
  USE_SNMP=--enable-snmp
  $(warning "DEBIAN: SNMP enabled, sorry for your inconvenience")
else
  $(warning "DEBIAN: SNMP disabled, see README.Debian")
endif

ifneq ($(WANT_LDP), 0)
  USE_LDP=--enable-ldpd
else
  USE_LDP=--disable-ldpd
endif

ifneq ($(WANT_PIM), 0)
  USE_PIM=--enable-pimd
else
  USE_PIM=--disable-pimd
endif

ifneq ($(WANT_OSPFAPI), 0)
  USE_OSPFAPI=--enable-ospfapi=yes
else
  USE_OSPFAPI=--enable-ospfapi=no
endif

ifeq ($(WANT_TCP_ZEBRA),1)
  USE_TCP_ZEBRA=--enable-tcp-zebra
endif

ifneq ($(WANT_BGP_VNC), 0)
  USE_BGP_VNC=--enable-bgp-vnc=yes
else
  USE_BGP_VNC=--enable-bgp-vnc=no
endif

ifndef WANT_FRR_USER
  USE_FRR_USER=--enable-user=frr
  USE_FRR_GROUP=--enable-group=frr
else
  USE_FRR_USER=--enable-user=$(WANT_FRR_USER)
  USE_FRR_GROUP=--enable-group=$(WANT_FRR_USER)
endif

ifndef WANT_FRR_VTY_GROUP
  USE_FRR_VTY_GROUP=--enable-vty-group=frrvty
else
  USE_FRR_VTY_GROUP=--enable-vty-group=$(WANT_FRR_VTY_GROUP)
endif

ifneq ($(WANT_MULTIPATH), 0)
  ifdef MULTIPATH
    USE_MULTIPATH=--enable-multipath=$(MULTIPATH)
  else
    USE_MULTIPATH=--enable-multipath=256
  endif
else
  USE_MULTIPATH=--disable-multipath
endif

ifeq ($(WANT_CUMULUS_MODE), 1)
  USE_CUMULUS=--enable-cumulus=yes
else
  USE_CUMULUS=--enable-cumulus=no
endif

ifeq ($(WANT_RPKI), 1)
  USE_RPKI=--enable-rpki
else
  USE_RPKI=--disable-rpki
endif

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
  DEBIAN_JOBS := $(subst parallel=,,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
endif

ifdef DEBIAN_JOBS
MAKEFLAGS += -j$(DEBIAN_JOBS)
endif

%:
	dh $@ --with=systemd,autoreconf --parallel --dbg-package=frr-dbg --list-missing

override_dh_gencontrol:
ifeq ($(WANT_RPKI), 1)
	dh_gencontrol -- -Vdist:Depends="librtr0 (>= 0.5)"
else
	dh_gencontrol
endif

override_dh_auto_configure:
	# Frr needs /proc to check some BSD vs Linux specific stuff.
	# Else it fails with an obscure error message pointing out that
	# IPCTL_FORWARDING is an undefined symbol which is not very helpful.
	@if ! [ -d /proc/1 ]; then \
		echo "./configure needs a mounted /proc"; \
		exit 1; \
	fi

	if ! [ -e config.status ]; then \
	dh_auto_configure -- \
		--enable-exampledir=/usr/share/doc/frr/examples/ \
		--localstatedir=/var/run/frr \
		--sbindir=/usr/lib/frr \
		--sysconfdir=/etc/frr \
		$(USE_SNMP) \
		$(USE_OSPFAPI) \
		$(USE_MULTIPATH) \
		$(USE_LDP) \
		$(USE_TCP_ZEBRA) \
		--enable-fpm \
		$(USE_FRR_USER) $(USE_FRR_GROUP) \
		$(USE_FRR_VTY_GROUP) \
		--enable-configfile-mask=0640 \
		--enable-logfile-mask=0640 \
		--enable-werror \
		--with-libpam \
		--enable-systemd=yes \
		--enable-poll=yes \
		$(USE_CUMULUS) \
		$(USE_PIM) \
		--enable-dependency-tracking \
		$(USE_BGP_VNC) \
		$(USE_RPKI) \
		$(shell dpkg-buildflags --export=configure); \
	fi

override_dh_auto_build:
	#dh_auto_build
	$(MAKE)
	dh_auto_build -- -C doc draft-zebra-00.txt


	# doc/ is a bit crazy
ifeq ($(GENERATE_PDF), 1)
	dh_auto_build -- -C doc frr.pdf || true # pdfetex fails with exit code 1 but still produces a good looking .pdf
endif
	rm -vf doc/frr.info
	dh_auto_build -- -C doc frr.info
	rm -vf doc/frr.info.html*

override_dh_auto_test:

override_dh_auto_install:
	dh_auto_install

	# installed in frr-pythontools
	rm debian/tmp/usr/lib/frr/frr-reload.py

	# cleaning up the info dir
	rm -f debian/tmp/usr/share/info/dir*

	# install config files
	mkdir -p debian/tmp/etc/frr/
	perl -pi -e 's#^!log file #!log file /var/log/frr/#' debian/tmp/usr/share/doc/frr/examples/*sample*

	# installing the Frr specific SNMP MIB
ifeq ($(WANT_SNMP), 1)
	install -D -m 644 ./zebra/GNOME-PRODUCT-ZEBRA-MIB debian/tmp/usr/share/snmp/mibs/GNOME-PRODUCT-ZEBRA-MIB
else
	mkdir -p debian/tmp/usr/share/snmp/mibs/
endif

	# cleaning .la files
	sed -i "/dependency_libs/ s/'.*'/''/" debian/tmp/usr/lib/*.la
	sed -i "/dependency_libs/ s/'.*'/''/" debian/tmp/usr/lib/frr/modules/*.la

override_dh_systemd_start:
	dh_systemd_start frr.service

override_dh_systemd_enable:
	dh_systemd_enable frr.service

