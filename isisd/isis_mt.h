/**IS-ISRout(e)ingprotocol-MultiTopologySupport**Copyright(C)2017ChristianFranke
**ThisfileispartofFreeRangeRouting(FRR)**FRRisfreesoftware;youcanredistributeita
nd/ormodifyit*underthetermsoftheGNUGeneralPublicLicenseaspublishedbythe*FreeSoft
wareFoundation;eitherversion2,or(atyouroption)any*laterversion.**FRRisdistribute
dinthehopethatitwillbeuseful,but*WITHOUTANYWARRANTY;withouteventheimpliedwarrant
yof*MERCHANTABILITYorFITNESSFORAPARTICULARPURPOSE.SeetheGNU*GeneralPublicLicense
formoredetails.**YoushouldhavereceivedacopyoftheGNUGeneralPublicLicensealong*wit
hthisprogram;seethefileCOPYING;ifnot,writetotheFreeSoftware*Foundation,Inc.,51Fr
anklinSt,FifthFloor,Boston,MA02110-1301USA*/#ifndefISIS_MT_H#defineISIS_MT_H#def
ineISIS_MT_MASK0x0fff#defineISIS_MT_OL_MASK0x8000#defineISIS_MT_AT_MASK0x4000#de
fineISIS_MT_IPV4_UNICAST0#defineISIS_MT_IPV4_MGMT1#defineISIS_MT_IPV6_UNICAST2#d
efineISIS_MT_IPV4_MULTICAST3#defineISIS_MT_IPV6_MULTICAST4#defineISIS_MT_IPV6_MG
MT5#defineISIS_MT_NAMES\"<ipv4-unicast"\"|ipv4-mgmt"\"|ipv6-unicast"\"|ipv4-mult
icast"\"|ipv6-multicast"\"|ipv6-mgmt"\">"#defineISIS_MT_DESCRIPTIONS\"IPv4unicas
ttopology\n"\"IPv4managementtopology\n"\"IPv6unicasttopology\n"\"IPv4multicastto
pology\n"\"IPv6multicasttopology\n"\"IPv6managementtopology\n"#defineISIS_MT_INF
O_FIELDSuint16_tmtid;structlist;structisis_area_mt_setting{ISIS_MT_INFO_FIELDSbo
olenabled;booloverload;};structisis_circuit_mt_setting{ISIS_MT_INFO_FIELDSboolen
abled;};constchar*isis_mtid2str(uint16_tmtid);uint16_tisis_str2mtid(constchar*na
me);structisis_adjacency;structisis_area;structisis_circuit;structtlvs;structte_
is_neigh;structisis_tlvs;uint16_tisis_area_ipv6_topology(structisis_area*area);s
tructisis_area_mt_setting*area_lookup_mt_setting(structisis_area*area,uint16_tmt
id);structisis_area_mt_setting*area_new_mt_setting(structisis_area*area,uint16_t
mtid);voidarea_add_mt_setting(structisis_area*area,structisis_area_mt_setting*se
tting);voidarea_mt_init(structisis_area*area);voidarea_mt_finish(structisis_area
*area);structisis_area_mt_setting*area_get_mt_setting(structisis_area*area,uint1
6_tmtid);intarea_write_mt_settings(structisis_area*area,structvty*vty);boolarea_
is_mt(structisis_area*area);structisis_area_mt_setting**area_mt_settings(structi
sis_area*area,unsignedint*mt_count);structisis_circuit_mt_setting*circuit_lookup
_mt_setting(structisis_circuit*circuit,uint16_tmtid);structisis_circuit_mt_setti
ng*circuit_new_mt_setting(structisis_circuit*circuit,uint16_tmtid);voidcircuit_a
dd_mt_setting(structisis_circuit*circuit,structisis_circuit_mt_setting*setting);
voidcircuit_mt_init(structisis_circuit*circuit);voidcircuit_mt_finish(structisis
_circuit*circuit);structisis_circuit_mt_setting*circuit_get_mt_setting(structisi
s_circuit*circuit,uint16_tmtid);intcircuit_write_mt_settings(structisis_circuit*
circuit,structvty*vty);structisis_circuit_mt_setting**circuit_mt_settings(struct
isis_circuit*circuit,unsignedint*mt_count);booltlvs_to_adj_mt_set(structisis_tlv
s*tlvs,boolv4_usable,boolv6_usable,structisis_adjacency*adj);booladj_has_mt(stru
ctisis_adjacency*adj,uint16_tmtid);voidadj_mt_finish(structisis_adjacency*adj);v
oidtlvs_add_mt_bcast(structisis_tlvs*tlvs,structisis_circuit*circuit,intlevel,ui
nt8_t*id,uint32_tmetric,uint8_t*subtlvs,uint8_tsubtlv_len);voidtlvs_add_mt_p2p(s
tructisis_tlvs*tlvs,structisis_circuit*circuit,uint8_t*id,uint32_tmetric,uint8_t
*subtlvs,uint8_tsubtlv_len);#endif