/**DictionaryAbstractDataType*Copyright(C)1997KazKylheku<kaz@ashi.footprints.net
>**FreeSoftwareLicense:**Allrightsarereservedbytheauthor,withthefollowingexcepti
ons:*Permissionisgrantedtofreelyreproduceanddistributethissoftware,*possiblyinex
changeforafee,providedthatthiscopyrightnoticeappears*intact.Permissionisalsogran
tedtoadaptthissoftwaretoproduce*derivativeworks,aslongasthemodifiedversionscarry
thiscopyright*noticeandadditionalnoticesstatingthattheworkhasbeenmodified.*Thiss
ourcecodemaybetranslatedintoexecutableformandincorporated*intoproprietarysoftwar
e;thereisnorequirementforsuchsoftwareto*containacopyrightnoticerelatedtothissour
ce.**/#ifndefDICT_H#defineDICT_H#include<limits.h>/**BlurbforinclusionintoC++tra
nslationunits*/#ifdef__cplusplusextern"C"{#endiftypedefunsignedlongdictcount_t;#
defineDICTCOUNT_T_MAXULONG_MAX/**Thedictionaryisimplementedasared-blacktree*/typ
edefenum{dnode_red,dnode_black}dnode_color_t;typedefstructdnode_t{structdnode_t*
dict_left;structdnode_t*dict_right;structdnode_t*dict_parent;dnode_color_tdict_c
olor;constvoid*dict_key;void*dict_data;}dnode_t;typedefint(*dict_comp_t)(constvo
id*,constvoid*);typedefdnode_t*(*dnode_alloc_t)(void*);typedefvoid(*dnode_free_t
)(dnode_t*,void*);typedefstructdict_t{dnode_tdict_nilnode;dictcount_tdict_nodeco
unt;dictcount_tdict_maxcount;dict_comp_tdict_compare;dnode_alloc_tdict_allocnode
;dnode_free_tdict_freenode;void*dict_context;intdict_dupes;}dict_t;typedefvoid(*
dnode_process_t)(dict_t*,dnode_t*,void*);typedefstructdict_load_t{dict_t*dict_di
ctptr;dnode_tdict_nilnode;}dict_load_t;externdict_t*dict_create(dictcount_t,dict
_comp_t);externvoiddict_set_allocator(dict_t*,dnode_alloc_t,dnode_free_t,void*);
externvoiddict_destroy(dict_t*);externvoiddict_free_nodes(dict_t*);externvoiddic
t_free(dict_t*);externdict_t*dict_init(dict_t*,dictcount_t,dict_comp_t);externvo
iddict_init_like(dict_t*,constdict_t*);externintdict_verify(dict_t*);externintdi
ct_similar(constdict_t*,constdict_t*);externdnode_t*dict_lookup(dict_t*,constvoi
d*);externdnode_t*dict_lower_bound(dict_t*,constvoid*);externdnode_t*dict_upper_
bound(dict_t*,constvoid*);externvoiddict_insert(dict_t*,dnode_t*,constvoid*);ext
erndnode_t*dict_delete(dict_t*,dnode_t*);externintdict_alloc_insert(dict_t*,cons
tvoid*,void*);externvoiddict_delete_free(dict_t*,dnode_t*);externdnode_t*dict_fi
rst(dict_t*);externdnode_t*dict_last(dict_t*);externdnode_t*dict_next(dict_t*,dn
ode_t*);externdnode_t*dict_prev(dict_t*,dnode_t*);externdictcount_tdict_count(di
ct_t*);externintdict_isempty(dict_t*);externintdict_isfull(dict_t*);externintdic
t_contains(dict_t*,dnode_t*);externvoiddict_allow_dupes(dict_t*);externintdnode_
is_in_a_dict(dnode_t*);externdnode_t*dnode_create(void*);externdnode_t*dnode_ini
t(dnode_t*,void*);externvoiddnode_destroy(dnode_t*);externvoid*dnode_get(dnode_t
*);externconstvoid*dnode_getkey(dnode_t*);externvoiddnode_put(dnode_t*,void*);ex
ternvoiddict_process(dict_t*,void*,dnode_process_t);externvoiddict_load_begin(di
ct_load_t*,dict_t*);externvoiddict_load_next(dict_load_t*,dnode_t*,constvoid*);e
xternvoiddict_load_end(dict_load_t*);externvoiddict_merge(dict_t*,dict_t*);#defi
nedict_isfull(D)((D)->dict_nodecount==(D)->dict_maxcount)#definedict_count(D)((D
)->dict_nodecount)#definedict_isempty(D)((D)->dict_nodecount==0)#definednode_get
(N)((N)->dict_data)#definednode_getkey(N)((N)->dict_key)#definednode_put(N,X)((N
)->dict_data=(X))#ifdef__cplusplus}#endif#endif