module frr-ospfd {
  yang-version "1.1";
  namespace "http://frrouting.org/yang/ospfd";

  prefix frr-ospfd;

  import frr-routing {
    prefix "frr-rt";
  }

  import ietf-inet-types {
    prefix inet;
  }

  import frr-interface {
    prefix frr-interface;
  }

  import frr-route-types {
    prefix frr-route-types;
  }


  organization
    "Free Range Routing";

  contact
    "FRR Users List: <mailto:frog@lists.frrouting.org>
     FRR Development List: <mailto:dev@lists.frrouting.org>";

  description
    "This module defines a model for managing FRR ospfd information.
     This YANG module augments the basic routing with additional
     ospf information";

  revision 2019-03-01 {
    description
      "Initial revision.";
  }

  /* Policy types to be removed later, once policy Yang finalized */
  typedef rmap-ref {
    type string;
  }

  typedef plist-ref {
    type string;
  }

  typedef access-list-ref {
    type string;
  }
  

  identity ospf {
    base frr-rt:routing-protocol;
    description
      "'Ospf' routing ospf-protocol.";
  }


  grouping nssa-grouping {
    container nssa {
      presence "Present if the nssa is enabled"; 
      
      leaf no-summary {
        type empty;
	description
	  "Do not inject inter-area routes into nssa";
      }
      leaf translate-always {
        type empty;
	description
	  "NSSA-ABR to always translate";
      }
      leaf translate-candidate {
        type empty;
	description
	  "NSSA-ABR for translate election";
      }
      leaf translate-never {
        type empty;
	description
	  "NSSA-ABR to never translate";
      }
    }
  }

  grouping range-grouing {
    container ranges {
      list range {
        key "prefix";
	description
	  "A list of range objects";

	leaf prefix {
	  type inet:ipv4-prefix;
	  description
	    "Area range prefix";
	}
	leaf advertise {
	  type empty;
	  description
	    "Advertise this range";
	}
	leaf not-advertise {
	  type empty;
	  description
	    "DoNotAdvertise this range";
	}
	leaf cost {
	  type uint32 {
	    range "0..16777215";
	  }
	  description
	    "Metric for this range";
	}
	leaf substitute {
	  type inet:ipv4-prefix;
	  description
	    "Network prefix to be announced instead of range";
	}
      }
    }
  }

  grouping stub-grouping {
    container stub {
      presence "Present when area is strub";
      
      leaf no-summary {
        type empty;
	  description
	    "Do not inject inter-area routes into stub";
      }
    }
  }

  grouping shortcut-grouping {
    container shortcut {
      leaf default {
        type empty;
	description
	  "Default shortcutting behavior";
      }
      leaf disable {
        type empty;
	description
	  "Disable shortcutting through the area";
      }
      leaf eanble {
        type empty;
	description
	  "Enable shortcutting through the area";
      }
    }
  }

  grouping authentication-group {
    container authentication {
      presence "Enable authentication.";
      description
        "Enable authentication on this virtual link.";
      leaf message-digest {
        type empty;
	description
	  "Use message-digest authentication.";
      }
      leaf null {
        type empty;
	description
	  "Use null authentication.";
      }
    }
    list message-digest-key {
      key "key_id";

      leaf key_id {
        type uint8;
	description
	  "Key id";
      }
      leaf mds-key {
        type string;
	description
	  "The OSPF password.";
      }
    }
    leaf authentication-key {
      type string;
      description
        "The OSPF password.";
    }
  }

  grouping virtual-link-group {
    list virtual-link {
      key "neighbor area_id";
      description
        "Virtual link parameters.";

      leaf neighbor {
        type inet:ipv4-address;
	description
	  "Router ID of the remote ABR.";
      }
      leaf area_id {
        type inet:ipv4-address;
      }

      uses authentication-group;


      container timers {
        leaf dead-interval {
	  type uint16;
	  description
	    "Interval time after which a neighbor is declared down.";
	}
	leaf hello-interval {
	  type uint16;
	  description
	    "Time between HELLO packets.";
	}
	leaf retransmit-interval {
	  type uint16;
	  description
	    "Time between retransmitting lost link state advertisements.";
	}
	leaf transmit-delay {
	  type uint16;
	  description
	    "Link state transmit delay.";
	}
      }
    }
  }

  grouping area-groupings {
    container areas {
      list area {
        key "area_id";
	description
	  "A list of area objects";
	
	leaf area_id {
	  type inet:ipv4-address;
	}
	container authentication {
	  presence "Enable authentication";

	  leaf message-digest {
	    type empty;
	    description
	      "Use message-digest authentication";
	  }
	}
	leaf default-cost {
	  type uint32 {
	    range "0..16777215";
	  }
	  description
	    "Advertised default summary cost";
	}
	leaf export-list {
	  type access-list-ref;
	  description
	    "Filter for networks announced to other areas.";
	}
	leaf import-list {
	  type access-list-ref;
	  description
	    "Filter for networks from other areas announced to the specified one.";
	}
	container filter-list {
	  leaf prefix {
	    type plist-ref;
	    description
	      "Filter networks between OSPF areas.";
	  }
	  leaf in {
	    type empty;
	  }
	  leaf out {
	    type empty;
	  }
	}

	uses nssa-grouping;
	uses range-grouing;
	uses stub-grouping;
	uses shortcut-grouping;
	uses virtual-link-group;
      }
    }
  }


  /* router ospf attributes */
  grouping route-ospf-leaf-attributes {
    leaf auto-cost-reference-bandwidth {
      type uint32 {
        range "1..4294967";
      } 
      description
        "The reference bandwidth in terms of Mbits per second.";
    }
    leaf capability-opaque {
      type empty;
      description 
        "Opaque LSA.";
    }
    leaf compatible-rfc1583 {
      type empty;
      description
        "Compatible with RFC 1583.";
    }
    leaf default-metric {
      type uint32 {
        range "0..16777214";
      }
      description
        "Metric of redistributed routes.";
    }
    leaf write-multiplier { 
      type uint8 { 
        range "1..100"; 
      } 
      description
        "Maximum number of interface serviced per write.";
    }
    container router-info { 
      leaf as { 
        type empty; 
        description
          "Enable the Router Information functionality with Area flooding scope.";
      } 
      leaf area { 
        type inet:ipv4-address; 
        description
          "Enable the Router Information functionality with AS flooding scope.";
      } 
    } 
 }

  grouping metric_common_group {
    leaf metric { 
      type uint32 {
        range "0..16777214";
      }
      description
        "OSPF default metric.";
    }
    leaf metric-type {
      type enumeration {
        enum "type-1" {
	  value 1;
	}
	enum "type-2" {
	  value 2;
	}
      } 
      description
        "Metric type (1/2).";
    } 
    leaf route-map {
      type rmap-ref;
      description
        "Route map reference.";
    }
  }

  grouping default-info-group {
    container default-inforamtion {
      leaf originte {
        type empty;
        description
          "Distribute a default route";
      }
      leaf always {
        type empty;
        description
          "Always advertise default route.";
      }
      uses metric_common_group;
    }
  }

  grouping redistribute-group {
    list redistribute {
      key "protocol";
      leaf protocol {
        type frr-route-types:frr-route-types-v4;
        description
          "Protocol.";
      }
      uses metric_common_group;
    }
  }

  grouping distance_group {
    container distance {
      leaf admin-value {
        type uint8 {
          range "1..255";
        }
        description
          "Admin value.";
      }
      container ospf {
        leaf external {
          type uint8 {
            range "1..255";
          }
          description
            "Distance for external routes.";
        }
        leaf inter-area {
          type uint8 {
            range "1..255"; 
          }
          description
            "Distance for inter-area routes.";
        }
        leaf intra-area {
          type uint8 {
            range "1..255";
          }
          description
            "Distance for intra-area routes.";
        }
      }
    }
  }

  grouping distribute-list-group {
    container distribute-list { 
      list dlist { 
        key "name protocol"; 
	leaf name { 
	  type string; 
	  description
	    "Filter networks in routing updates."; 
	} 
	leaf protocol { 
	  type frr-route-types:frr-route-types-v4; 
	  description
	    "Protocol."; 
	} 
	leaf out { 
	  type empty; 
	  description
	    "In direction."; 
	} 
	leaf in { 
	  type empty; 
	  description
	    "Out direction."; 
	} 
      } 
    } 
  }

  grouping max-metric-group {
    container max-metric { 
      container router-lsa { 
	  description
	    "Advertise own Router-LSA with infinite distance (stub router)."; 
        leaf administrative { 
	  type empty; 
	  description
	    "Administratively applied,  for an indefinite period."; 
	} 
	leaf on-shutdown { 
	  type uint8 { 
	    range "5..100"; 
	  } 
	  description
	    "Advertise stub-router prior to full shutdown of OSPF."; 
	} 
	leaf on-startup { 
	  type uint32 { 
	    range "5..86400"; 
	  } 
	  description
	    "Automatically advertise stub Router-LSA on startup of OSPF."; 
	} 
      } 
    } 
  }

  grouping mpls-te-group {
    container mpls-te { 
      leaf on { 
        type empty; 
	description
	  "Enable the MPLS-TE functionality."; 

      } 
      leaf router-address { 
        type inet:ipv4-address; 
	description
	  "Stable IP address of the advertising router."; 
      } 
      container inrer-as { 
        leaf as { 
	  type empty; 
	  description
	    "AS native mode self originate INTER_AS LSA with Type 11 (as flooding scope)."; 
	} 
	leaf area { 
	  type inet:ipv4-address; 
	  description
	    "AREA native mode self originate INTER_AS LSA with Type 10 (area flooding scope)."; 
	} 
      } 
    } 
  }

  grouping ospf-group { 
    container ospf { 
      leaf abr-type { 
        type enumeration { 
	  enum "cisco" { 
	    value 1; 
	    description
	      "Alternative ABR,  cisco implementation.";
	  } 
	  enum "ibm" { 
	    value 2; 
	    description
	      "Alternative ABR,  IBM implementation.";
	  } 
	  enum "shortcut" { 
	    value 3; 
	    description
	      "Shortcut ABR.";
	  } 
	  enum "standard" { 
	    value 4; 
	    description
	      "Standard behavior (RFC2328).";
	  } 
	} 
      } 
      leaf opaque-lsa { 
        type empty; 
	description
	  "Enable the Opaque-LSA capability (rfc2370)";
      } 
      leaf rfc1583compatibility { 
        type empty; 
	description
	  "Enable the RFC1583Compatibility flag.";
      } 
      leaf router-id { 
        type inet:ipv4-address; 
	description
	  "Router-id for the OSPF process.";
      } 
      leaf write-multiplier { 
        type uint8 { 
	  range "1..100"; 
	} 
	description
	  "Write multiplier.";
      } 
    } 
  }

  grouping timer-group {
    container timers { 
      leaf refresh-interval { 
        type uint16 { 
          range "10..1800"; 
        } 
	description
	  "Timer value in seconds.";
      } 
      leaf lsa-min-interval { 
        type uint32 { 
          range "0..600000"; 
        } 
	description
	  "Minimum delay in receiving new version of a LSA.";
      } 
      container throttle { 
        leaf lsa-all { 
          type uint16 { 
	    range "0..5000"; 
	  } 
	  description
	    "LSA delay between transmissions.";
        } 
        leaf spf { 
          type uint32 { 
	    range "0..600000"; 
	  } 
	  description
	    "Delay from first change received till SPF calculation.";
        } 
      } 
    } 
  }

  grouping segment-routing-group {
    container segment-routing { 
      container global-block { 
        description
	  "Segment Routing Global Block label range.";
        leaf lower-bound { 
	  type uint32 { 
	    range "0..1048575"; 
	  } 
	} 
	leaf upper-bound { 
	  type uint32 { 
	    range "0..1048575"; 
	  } 
	} 
      } 
      leaf node-msd { 
        type uint8 { 
	  range "1..16"; 
	} 
        description
	  "Maximum Stack Depth for this router.";
      } 
      leaf on { 
        type empty; 
        description
	  "Enable Segment Routing.";
      } 
      list indices { 
        key "index"; 
	leaf index { 
	  type uint16; 
          description
	    "SID index for this prefix.";
	} 
	leaf prefix { 
	  type inet:ipv4-prefix; 
          description
	    "Prefix SID.";
	} 
	leaf no-php-flag { 
	  type empty; 
          description
	    "Don't request Penultimate Hop Popping (PHP).";
	} 
      } 
    } 
  }

  grouping ospf-list-group {
    list neighbor { 
      key "ip"; 
      description
        "Neighbor list.";
      leaf ip { 
        type inet:ipv4-address; 
        description
	  "Neighbor IP address.";
      } 
      leaf priority { 
        type uint8; 
        description
	  "Neighbor Priority.";
      } 
      leaf poll-interval { 
        type uint16 { 
	  range "1..65535"; 
	} 
        description
	  "Dead Neighbor Polling interval.";
      } 
    } 
    list network { 
      key "prefix"; 
      description
        "Enable routing on list of IP network.";
      leaf prefix { 
        type inet:ipv4-prefix; 
        description
	  "Prefix on which routing needs to be enabled.";
      } 
      leaf area { 
        type inet:ipv4-address; 
        description
	  "Area ID for this network.";
      } 
    } 
    list passive-interface { 
      key "interface"; 
      description
        "Suppress routing updates on list interface.";
      leaf interface { 
        type frr-interface:interface-ref; 
        description
          "Suppress routing updates on an interface.";
      } 
      leaf address { 
        type inet:ipv4-address; 
        description
          "Interface address.";
      } 
    }
  }

  grouping cpe-group {
    container cpe {
      description
        "PCE Router Information.";

      leaf address {
        type inet:ipv4-address; 
        description
          "IP address of the PCE.";
      }
      list domain {
        key "as";
        leaf as {
          type uint16;
          description
	    "AS number where the PCE as visibilities for path computation.";
	}
      }
      list neighbor {
        key "as";
        leaf as {
          type uint16;
          description
	    "AS number of PCE neighbors.";
	}
      }
      leaf flag {
        type uint32;
        description
	  "Capabilities of the PCE for path computation.";
      }
      leaf scope {
        type uint32;
        description
	  "Path scope visibilities of the PCE for path computation.";
      }
    }
  }


  grouping interface-ospf-attribute-group {
    leaf area { 
      description
        "Ospf area ID.";
      type inet:ipv4-address;
    }
    uses authentication-group;
    leaf cost {
      description
        "Interface cost";
      type uint16 {
        range "1..65535";
      }
    }
    container dead-interval {
      leaf interval {
        type uint16 {
	  range "1..65535";
	}
      }
      container minimal {
        leaf hello-multiplier {
	  type uint8 {
	    range "1..10";
	  }
	}
      }
    }
    leaf hello-interval {
      description
        "Time between HELLO packets.";
      type uint16 {
        range "1..65535";
      }
    }
    leaf retransmit-interval {
      type uint16;
      description
        "Time between retransmitting lost link state advertisements.";
    }
    leaf transmit-delay {
      type uint16;
      description
        "Link state transmit delay.";
    }
    leaf mtu-ignore {
      description
        "Disable MTU mismatch detection on this interface.";
      type empty;
    }
    leaf priority {
      description
        "Router priority.";
      type uint8;
    }
  }

  grouping inteface-ospf-group {
    list instance {
      key "id";
      leaf id {
        type uint16;
        description
          "Ospf instance ID.";
      }
      leaf bfd {
        description
          "BFD support.";
        type empty;
      }
      leaf network {
        type enumeration {
	  enum "broadcast" {
	    value 1;
	  }
	  enum "non-broadcast" {
	    value 2;
	  }
	  enum "point-to-multipoint" {
	    value 3;
	  }
	  enum "point-to-point" {
	    value 4;
	  }
	}
      }
      uses interface-ospf-attribute-group;

      list interface-address {
        key "address";
        leaf address {
          description
	    "Address of interface";
	  type inet:ipv4-address;
        }

	uses interface-ospf-attribute-group;

      }
    }
  }

  augment "/frr-rt:routing/frr-rt:control-plane-protocols/"
        + "frr-rt:control-plane-protocol" {
    container ospf {
      when "../frr-rt:type = 'frr-ospfd:ospf'" {
        description
          "This container is only valid for the 'ospf' routing
           protocol.";
      }
      description
        "Support for a 'ospf' pseudo-protocol instance
         consists of a list of routes.";

      list instance {
        key "id";
        description
          "List of ospf instance.";

        leaf id {
          type uint16;
          description
            "Ospf instance ID.";
        }

	uses route-ospf-leaf-attributes;
	uses default-info-group;
	uses redistribute-group;
	uses distance_group;
	uses distribute-list-group;
	uses max-metric-group;
	uses mpls-te-group;
	uses ospf-group;
	uses timer-group;
	uses segment-routing-group;
	uses ospf-list-group;
	uses cpe-group;
	uses area-groupings;
      }
    }
  }

  /*
   * Per-interface configuration data
   */
  augment "/frr-interface:lib/frr-interface:interface" {
    container ospf {
      description
        "OSPF interface parameters.";
      uses inteface-ospf-group;
    }
  } 

}
