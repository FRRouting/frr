module frr-bgp-filter {
  yang-version 1.1;
  namespace "http://frrouting.org/yang/bgp-filter";
  prefix frr-bgp-filter;

  import  frr-filter {
    prefix frr-filter;
  }
  import ietf-routing-types {
    prefix rt-types;
  }

  organization "Free Range Routing";
  contact
    "FRR Users List:       <mailto:frog@lists.frrouting.org>
     FRR Development List: <mailto:dev@lists.frrouting.org>";
  description "This module defines filter settings";

  revision 2020-01-15 {
    description "Initial revision";
  }

  /*
   * Types.
   */
  typedef list-sequence {
    description
      "List instance priority (low number means higher priority)";
    type uint32 {
      range "1..4294967295";
    }
  }

  typedef list-action {
    description "Return action on match";
    type enumeration {
      enum deny {
        description "Deny an entry";
        value 0;
      }
      enum permit {
        description "Accept an entry";
        value 1;
      }
    }
  }

  typedef bgp-list-standard {
    description "Standard list";
    type uint8 {
      range "1..99";
    }
  }

  typedef bgp-list-extended {
    description "Extended list";
    type uint16 {
      range "100..500";
    }
  }

  typedef bgp-list-name {
    description "List name";
    type string;
  }

  typedef community-string {
    type string {
      pattern
        '(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{0,3}|0)|'
      + '((6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{0,3}|0):'
      + '(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{0,3}|0))|'
      + '(local-AS)|(no-advertise)|(no-export)|(internet)';
    }

    description "The BGP community string";
  }

  typedef large-community-string {
    type string {
      pattern
        '(429496729[0-5]|42949672[0-8][0-9]|4294967[01][0-9]{2}|429496[0-6][0-9]{3}|42949[0-5][0-9]{4}|4294[0-8][0-9]{5}|'
      + '429[0-3][0-9]{6}|42[0-8][0-9]{7}|4[01][0-9]{8}|[1-3][0-9]{9}|[1-9][0-9]{0,8}|0)|'
      + '(429496729[0-5]|42949672[0-8][0-9]|4294967[01][0-9]{2}|429496[0-6][0-9]{3}|42949[0-5][0-9]{4}|4294[0-8][0-9]{5}|'
      + '429[0-3][0-9]{6}|42[0-8][0-9]{7}|4[01][0-9]{8}|[1-3][0-9]{9}|[1-9][0-9]{0,8}|0):'
      + '(429496729[0-5]|42949672[0-8][0-9]|4294967[01][0-9]{2}|429496[0-6][0-9]{3}|42949[0-5][0-9]{4}|4294[0-8][0-9]{5}|'
      + '429[0-3][0-9]{6}|42[0-8][0-9]{7}|4[01][0-9]{8}|[1-3][0-9]{9}|[1-9][0-9]{0,8}|0)|'
      + '(429496729[0-5]|42949672[0-8][0-9]|4294967[01][0-9]{2}|429496[0-6][0-9]{3}|42949[0-5][0-9]{4}|4294[0-8][0-9]{5}|'
      + '429[0-3][0-9]{6}|42[0-8][0-9]{7}|4[01][0-9]{8}|[1-3][0-9]{9}|[1-9][0-9]{0,8}|0):'
      + '(429496729[0-5]|42949672[0-8][0-9]|4294967[01][0-9]{2}|429496[0-6][0-9]{3}|42949[0-5][0-9]{4}|4294[0-8][0-9]{5}|'
      + '429[0-3][0-9]{6}|42[0-8][0-9]{7}|4[01][0-9]{8}|[1-3][0-9]{9}|[1-9][0-9]{0,8}|0):'
      + '(429496729[0-5]|42949672[0-8][0-9]|4294967[01][0-9]{2}|429496[0-6][0-9]{3}|42949[0-5][0-9]{4}|4294[0-8][0-9]{5}|'
      + '429[0-3][0-9]{6}|42[0-8][0-9]{7}|4[01][0-9]{8}|[1-3][0-9]{9}|[1-9][0-9]{0,8}|0)';
    }

    description "The BGP large-community string";
  }

  /*
   * Configuration data.
   */
  augment "/frr-filter:filter-list" {

    list community-list {
      description "Community-list instance";

      key "name";

      leaf name {
        type string;
      }

      list entry {
        description "Community-list entry";

        key "sequence";

        leaf sequence {
          type list-sequence;
        }
        leaf action {
          type list-action;
        }

        leaf type {
          description "Community-list instance name/identifier";

          type enumeration {
            enum community-list-standard {
              description "Standard community-list name/identifier";
              value 0;
            }
            enum community-list-extended {
              description "Expanded community-list name/identifier";
              value 1;
            }
          }
          mandatory true;
        }

        choice community-string {
          description "Community string";

          case standard {
            when "./type = 'community-list-standard'";
            leaf-list standard-community-string {
              description "Community string";
              type community-string;
            }
          }
          case expanded {
            when "./type = 'community-list-extended'";
            leaf expanded-community-string {
              description "Community string reg-ex";
              type string;
            }
          }
        }
      }
    }

    list large-community-list {
      description "Large community-list instance";

      key "name";

      leaf name {
        type string;
      }

      list entry {
        description "Large community-list entry";

        key "sequence";

        leaf sequence {
          type list-sequence;
        }
        leaf action {
          type list-action;
        }

        leaf type {
          description "Large community-list instance name/identifier";

          type enumeration {
            enum large-community-list-standard-id {
              description "Standard large-community-list identifier";
              value 0;
            }
            enum large-community-list-extended-id {
              description "Expanded large-community-list identifier";
              value 1;
            }
            enum large-community-list-standard-name {
              description "Standard large-community-list name";
              value 2;
            }
            enum large-community-list-extended-name {
              description "Expanded large-community-list name";
              value 3;
            }
          }
          mandatory true;
        }

        choice large-community-string {
          description "Large community string";

          case standard {
            when "./type = 'large-community-list-standard-id' or
                  ./type = 'large-community-list-standard-name'";
            leaf-list standard-large-community-string {
              description "Large community string";
              type large-community-string;
            }
          }
          case expanded {
            when "./type = 'large-community-list-extended-id' or
                  ./type = 'large-community-list-extended-name'";
            leaf expanded-large-community-string {
              description "Large community string reg-ex";
              type string;
            }
          }
        }
      }
    }

    list extcommunity-list {
      description "Extcommunity-list instance";

      key "name";

      leaf name {
        type string;
      }

      list entry {
        description "Extcommunity-list entry";

        key "sequence";

        leaf sequence {
          type list-sequence;
        }
        leaf action {
          type list-action;
        }

        leaf type {
          description "Extcommunity-list instance name/identifier";

          type enumeration {
            enum extcommunity-list-standard-id {
              description "Standard extcommunity-list identifier";
              value 0;
            }
            enum extcommunity-list-extended-id {
              description "Expanded extcommunity-list identifier";
              value 1;
            }
            enum extcommunity-list-standard-name {
              description "Standard extcommunity-list name";
              value 2;
            }
            enum extcommunity-list-extended-name {
              description "Expanded extcommunity-list name";
              value 3;
            }
          }
          mandatory true;
        }

        choice Extcommunity-string {
          description "Extcommunity string";

          case standard {
            when "./type = 'extcommunity-list-standard-id' or
                  ./type = 'extcommunity-list-standard-name'";

            choice standard-extcommunity-string {
              description "Value of the ext-community";

              case extcommunity-rt {
                description "Set BGP ext-community route-target attribute";
                leaf-list extcommunity-rt {
                  type rt-types:route-target;
                }
              }
              case extcommunity-soo {
                description "Set BGP ext-community site-of-origin attribute";
                leaf-list extcommunity-soo {
                  type rt-types:route-target;
                }
              }
            }
          }
          case expanded {
            when "./type = 'extcommunity-list-extended-id' or
                  ./type = 'extcommunity-list-extended-name'";
            leaf expanded-extcommunity-string {
              description "Extcommunity string reg-ex";
              type string;
            }
          }
        }
      }
    }

    list as-path-list {
      description "AS-path access-list instance";

      key "name";

      leaf name {
        description "AS-path access-list instance name/identifier";
        type string;
      }

      list entry {
        description "AS-path access-list entry";

        key "sequence";

        leaf sequence {
          type list-sequence;
        }
        leaf action {
          type list-action;
        }
        leaf as-path {
          description "AS-path access-list string reg-ex";
          type string;
        }
      }
    }
  }
}
