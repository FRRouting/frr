/**libnetlink.cRTnetlinkserviceroutines.**Thisprogramisfreesoftware;youcanredist
ributeitand/or*modifyitunderthetermsoftheGNUGeneralPublicLicense*aspublishedbyth
eFreeSoftwareFoundation;eitherversion*2oftheLicense,or(atyouroption)anylatervers
ion.**Authors:AlexeyKuznetsov,<kuznet@ms2.inr.ac.ru>**/#ifdef__linux__#ifndef__L
IBNETLINK_H__#define__LIBNETLINK_H__1#include<asm/types.h>#include<linux/netlink
.h>#include<linux/rtnetlink.h>#include<linux/if_link.h>#include<linux/if_addr.h>
#include<linux/neighbour.h>structrtnl_handle{intfd;structsockaddr_nllocal;struct
sockaddr_nlpeer;__u32seq;__u32dump;};externintrcvbuf;externintrtnl_open(structrt
nl_handle*rth,unsignedsubscriptions);externintrtnl_open_byproto(structrtnl_handl
e*rth,unsignedsubscriptions,intprotocol);externvoidrtnl_close(structrtnl_handle*
rth);externintrtnl_wilddump_request(structrtnl_handle*rth,intfam,inttype);extern
intrtnl_dump_request(structrtnl_handle*rth,inttype,void*req,intlen);typedefint(*
rtnl_filter_t)(conststructsockaddr_nl*,structnlmsghdr*n,void*);structrtnl_dump_f
ilter_arg{rtnl_filter_tfilter;void*arg1;rtnl_filter_tjunk;void*arg2;};externintr
tnl_dump_filter_l(structrtnl_handle*rth,conststructrtnl_dump_filter_arg*arg);ext
ernintrtnl_dump_filter(structrtnl_handle*rth,rtnl_filter_tfilter,void*arg1,rtnl_
filter_tjunk,void*arg2);externintrtnl_talk(structrtnl_handle*rtnl,structnlmsghdr
*n,pid_tpeer,unsignedgroups,structnlmsghdr*answer,rtnl_filter_tjunk,void*jarg);e
xternintrtnl_send(structrtnl_handle*rth,constchar*buf,int);externintrtnl_send_ch
eck(structrtnl_handle*rth,constchar*buf,int);externintaddattr32(structnlmsghdr*n
,intmaxlen,inttype,__u32data);externintaddattr_l(structnlmsghdr*n,intmaxlen,intt
ype,constvoid*data,intalen);externintaddraw_l(structnlmsghdr*n,intmaxlen,constvo
id*data,intlen);externstructrtattr*addattr_nest(structnlmsghdr*n,intmaxlen,intty
pe);externintaddattr_nest_end(structnlmsghdr*n,structrtattr*nest);externstructrt
attr*addattr_nest_compat(structnlmsghdr*n,intmaxlen,inttype,constvoid*data,intle
n);externintaddattr_nest_compat_end(structnlmsghdr*n,structrtattr*nest);externin
trta_addattr32(structrtattr*rta,intmaxlen,inttype,__u32data);externintrta_addatt
r_l(structrtattr*rta,intmaxlen,inttype,constvoid*data,intalen);externintparse_rt
attr(structrtattr*tb[],intmax,structrtattr*rta,intlen);externintparse_rtattr_byi
ndex(structrtattr*tb[],intmax,structrtattr*rta,intlen);externint__parse_rtattr_n
ested_compat(structrtattr*tb[],intmax,structrtattr*rta,intlen);#defineparse_rtat
tr_nested(tb,max,rta)\(parse_rtattr((tb),(max),RTA_DATA(rta),RTA_PAYLOAD(rta)))#
defineparse_rtattr_nested_compat(tb,max,rta,data,len)\({\data=RTA_PAYLOAD(rta)>=
len?RTA_DATA(rta):NULL;\__parse_rtattr_nested_compat(tb,max,rta,len);\})externin
trtnl_listen(structrtnl_handle*,rtnl_filter_thandler,void*jarg);externintrtnl_fr
om_file(FILE*,rtnl_filter_thandler,void*jarg);#defineNLMSG_TAIL(nmsg)\((structrt
attr*)(((uint8_t*)(nmsg))\+NLMSG_ALIGN((nmsg)->nlmsg_len)))#ifndefIFA_RTA#define
IFA_RTA(r)\((structrtattr*)(((char*)(r))\+NLMSG_ALIGN(sizeof(structifaddrmsg))))
#endif#ifndefIFA_PAYLOAD#defineIFA_PAYLOAD(n)NLMSG_PAYLOAD(n,sizeof(structifaddr
msg))#endif#ifndefIFLA_RTA#defineIFLA_RTA(r)\((structrtattr*)(((char*)(r))\+NLMS
G_ALIGN(sizeof(structifinfomsg))))#endif#ifndefIFLA_PAYLOAD#defineIFLA_PAYLOAD(n
)NLMSG_PAYLOAD(n,sizeof(structifinfomsg))#endif#ifndefNDA_RTA#defineNDA_RTA(r)\(
(structrtattr*)(((char*)(r))+NLMSG_ALIGN(sizeof(structndmsg))))#endif#ifndefNDA_
PAYLOAD#defineNDA_PAYLOAD(n)NLMSG_PAYLOAD(n,sizeof(structndmsg))#endif#ifndefNDT
A_RTA#defineNDTA_RTA(r)\((structrtattr*)(((char*)(r))+NLMSG_ALIGN(sizeof(structn
dtmsg))))#endif#ifndefNDTA_PAYLOAD#defineNDTA_PAYLOAD(n)NLMSG_PAYLOAD(n,sizeof(s
tructndtmsg))#endif#endif/*__LIBNETLINK_H__*/#endif/*__linux__*/